// Importing necessary functions from Redux Toolkit
import { createSlice, nanoid } from "@reduxjs/toolkit";

// Initial state containing a list of todos
const initialState = {
    todos: [
        {
            id: 1,
            text: "Hello world"
        }
    ]
};
//in context api we write declarration but in redux we use definition
// Creating a slice for todos
export const todoSlice = createSlice({
    name: 'todo', // Name of the slice
    initialState, // Initial state for the slice
    reducers: {
        // Reducer to add a new todo
        addTodo: (state, action) => {
            // Creating a new todo item with a unique ID and text from the action payload
            const todo = {
                id: nanoid(), // Generates a unique ID
                text: action.payload // Text for the new todo
            };
            state.todos.push(todo); // Adding the new todo to the state
        },
        // Reducer to remove a todo by ID
        removeTodo: (state, action) => {
            // Filtering out the todo with the matching ID
            state.todos = state.todos.filter((todo) => todo.id !== action.payload);
        },
        // Reducer to update a todo's text by ID
        updateTodo: (state, action) => {
            const { id, text } = action.payload; // Destructuring ID and new text from the action payload
            const todo = state.todos.find((t) => t.id === id); // Finding the todo with the matching ID
            if (todo) {
                todo.text = text; // Updating the text of the found todo
            }
        }
    }
});

// Exporting the action creators generated by createSlice
export const { addTodo, removeTodo, updateTodo } = todoSlice.actions;

// Exporting the reducer to be registered in the store
export default todoSlice.reducer;



